# OkHttp

## 基本实现

五个拦截器 + 三个双端队列（两个异步队列（异步执行队列+ 异步等待队列）+ 一个同步队列）
内部通过责任链模式实现每个步骤的解耦
底层通过Socket发送Http请求和接受响应，因为OkHttp实现了连接池的概念，同一个主机的多个请求可以公用一个Socket连接

## 执行过程

* 通过建造者模式构建出OkHttpClient对象，然后通过newCall 方法获得RealCall 请求对象
* 通过RealCall 发起同步或者起步请求，而决定异步请求还是同步请求是由线程分发器dispatcher来决定的
* 当发起同步请求时会将请求加入到同步队列中依次执行，所以会阻塞UI线程，需要开启子线程执行
* 当发起异步请求时会创建一个线程池，并且判断请求队列是否大于最大请求**64**，请求主机数是否大于**5**，如果大于请求添加到异步等待队列中，否则添加到异步执行队列中并执行任务



